{% from 'invisibleroads_uploads:templates/parts.jinja2' import render_upload_button %}

{% macro head_style_loaded() %}{% endmacro %}
{% macro head_style_inline() %}{% endmacro %}
{% macro head_script_inline() %}{% endmacro %}
{% macro body_script_loaded() %}{% endmacro %}

{% macro body_script_inline() %}
$('.table-upload').on('uploaded.ir.upload', function(e, d) {
  var name = $(this).parent().data('name');
  var $target = $('#' + name + '-upload');
  $.post('/c/table/import_table', {'id': d.id, 'name': name})
    .fail(function(d) {
      $target.html(d[name]);
    })
    .success(function(d) {
      $target.html(d);
    });
});

$('#tool-form').submit(function() {
  $('.editable-table').each(function() {
    var $table = $(this), table_id = $table.attr('id'), columns = [], rows = [];
    $(this).find('th').each(function() {
      columns.push($(this).text());
    });
    var $rows = $('#' + table_id).find('tr');
    for (var i = 1; i < $rows.length; i++) {
      var $columns = $($rows[i]).find('td'), row = [];
      for (var j = 0; j < $columns.length; j++) {
        row.push($($columns[j]).text());
      }
      rows.push(row);
    }
    $('[name=' + table_id + 'json]').val('{"columns":' + JSON.stringify(columns) + ',"data":' + JSON.stringify(rows) + '}');
  });
});
$('.editable-table').editableTableWidget({'editor': $('<input class="editable-table-input">')});
{% endmacro %}

{% macro render_argument(data_item) %}
{% set key = data_item.key %}
<div data-name="{{ key }}">{{ render_upload_button(id='%s-upload-button' % key, text='Upload', class='table-upload') }}</div>
<div id="{{ key }}-upload">{{ render_property(data_item, class='editable-table') }}</div>
<input name="{{ key }}-json" type="hidden">
{% endmacro %}

{% macro render_property(data_item, stamp='', class='') %}
{% set key = data_item.key + stamp %}
{% set table = data_item.value %}
<div class="scrollable">
<table id="{{ key }}" class="table {{ class }}">
<thead>
<tr>{% for column in table.columns %}<th>{{ column }}</th>{% endfor %}</tr>
</thead>
<tbody>
{% for index, row in table.fillna('').iterrows() %}
<tr>{% for column in row %}<td>{{ column }}</td>{% endfor %}</tr>
{% endfor %}
</tbody>
</table>
</div>
<table id="{{ key }}" class="table {{ class }}">
{% endmacro %}

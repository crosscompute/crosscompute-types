{% macro render_value(key, geotable) %}
<h3>{{ key }}</h3>
<table id="{{ key }}_table" class="table">
  <tr>{% for column in geotable.columns %}<th>{{ column }}</th>{% endfor %}</tr>
{% for index, row in geotable[:20].iterrows() %}
  <tr>{% for column in row %}<td>{{ column }}</td>{% endfor %}</tr>
{% endfor %}
</table>

<div id="{{ key }}_map" class="map"></div>
<script>
setTimeout(function() {
  var map = L.map('{{ key }}_map');

  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6IjZjNmRjNzk3ZmE2MTcwOTEwMGY0MzU3YjUzOWFmNWZhIn0.Y8bhBaUMqFiPrDRW9hieoQ', {
    maxZoom: 18,
    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
    id: 'mapbox.streets'
  }).addTo(map);

  var markers = [];
{% for index, row in geotable[:20].iterrows() %}
  {% set longitude = row['Longitude'] %}
  {% set latitude = row['Latitude'] %}
  markers.push(L.marker([{{ latitude }}, {{ longitude }}]).bindPopup("{% for column, value in row.iteritems() %}{{ column }} = {{ value }}<br>{% endfor %}"));
{% endfor %}
  var group = L.featureGroup(markers).addTo(map);
  map.fitBounds(group.getBounds());
}, 1500);
</script>
{% endmacro %}
